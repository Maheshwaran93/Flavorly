<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="\css\head.css">
   <link rel="stylesheet" href="\css\foofrenzy.css">
    <title>FoodFrenzy</title>
</head>
<body>

<%-include('../particals/head')%>
 <div class="search">

   <input  class="input" type="text" placeholder="search your recipe...">
   <div id="icon_backgound">
    <img  class="search_icon" src="/images/search (1).png">
</div>  

</div>

</div>

<div id="align_center">
  <div class="image_contents">
 
    <% for(dish of dishes){%>
      <a href="/profile/<%=id%>/Search_Recipie/<%=dish.id%>">
          <img class="box" src="<%=dish.path[0].url%>" >
      </a>
       
       <%}%>

   </div>
  
    </div> </div>
    <br><br><br><br>
    
    <script>
document.addEventListener('DOMContentLoaded', function() {
  const input = document.querySelector('.input')
  var dishesData = <%- JSON.stringify(dishes) %>;
  var id = <%- JSON.stringify(id) %>;
 
  const imageContents = document.querySelector('.image_contents'); 
  function filterObj(data, searchItem) {
    const temp = data.slice();
    let regex,
    filteredData = [];
    const key = Object.keys(searchItem);
    const value = Object.values(searchItem);
    for (let i in key) {
      const k = key[i],
        v = value[i];
      if (typeof v === "number") {
        filteredData = temp.filter((item) => item[k] === v);
        return filteredData;
      }
      if (typeof v === "object") {
        let opt = Object.keys(v)[0],
          val = Object.values(v)[0];
        const option = ["$gt", "$lt", "$lte", "$gte", "$eq"];
        if (option.includes(opt)) {
          switch (opt) {
            case "$gt":
              filteredData = filteredData.concat(
                temp.filter((item) => item[k] > val)
              );
              break;
            case "$lt":
              filteredData = filteredData.concat(
                temp.filter((item) => item[k] < val)
              );
              break;
            case "$lte":
              filteredData = filteredData.concat(
                temp.filter((item) => item[k] <= val)
              );
              break;
            case "$gte":
              filteredData = filteredData.concat(
                temp.filter((item) => item[k] >= val)
              );
              break;
            case "$eq":
              filteredData = filteredData.concat(
                temp.filter((item) => item[k] === val)
              );
              break;
          }
        } else {
          return "Invalid option";
        }
        filteredData = [...new Set(filteredData)];
        return filteredData;
      }
      regex = new RegExp(v.trim(), "i");
      filteredData = temp.filter((item) => regex.test(item[k]));
      if (filteredData.length === 0) {
        if (/\s/g.test(v)) {
          const splittedValue = v.split(" ");
          for (let i of splittedValue) {
            regex = new RegExp(i, "i");
            filteredData.push(...temp.filter((item) => regex.test(item[k])));
          }
        }
      }
    }
    filteredData = [...new Set(filteredData)];
    return filteredData;

  }
function f1(data){
  imageContents.innerHTML = ''; 
for (dish of data) {
 
    const anchor = document.createElement('a');
  anchor.href = `/profile/${id}/Search_Recipie/${dish._id}`;
  const image = document.createElement('img');
  image.src = `${dish.path[0].url}`;
  image.classList.add('box');
  anchor.appendChild(image);
  imageContents.appendChild(anchor);
  

}
}
  function f2(data) {
    imageContents.innerHTML = ''; 
    for (dish of data) {
      const anchor = document.createElement('a');
      anchor.href = `/profile/${id}/Search_Recipie/${dish._id}`;
      const image = document.createElement('img');
      image.src = `${dish.path[0].url}`;
      image.classList.add('box');
      anchor.appendChild(image);
      imageContents.appendChild(anchor);
    }
  }
  input.addEventListener('input', () => {
    if (input.value.length === 0) {
     return f1(dishesData)
    } else {
      let searched = filterObj(dishesData, { name: input.value });
      if(searched.length===0){
        f1(dishesData)
      }
      else{
        f2(searched);
      }
    
   
    }
  });
});
   </script>
  

</body>

</html>